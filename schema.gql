# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Tag {
  id: ID!
  label: String!
  description: String
  create_at: Date!
  update_at: Date!
}

"""Date custom scalar type"""
scalar Date

type Category {
  id: ID!
  label: String!
  alias: String
  description: String
  create_at: Date!
  update_at: Date!
  delete_at: Date!
  children: [Category!]
  parent: Category
}

type Medium {
  id: ID!
  name: String!
  alias_name: String!
  posters: [String!]
  description: String
  duration: Float
  preview_url: String
  url: String!
  low_quality_url: String
  medium_quality_url: String
  high_quality_url: String
  super_quality_url: String
  create_at: Date!
  update_at: Date!
  delete_at: Date!
  version: Float!
}

type User {
  uid: ID!
  username: String!
  password: String!
  email: String!
  nickname: String
  avatar: String
  mobile: String
  address: String
  description: String
  create_at: Date!
  update_at: Date!
  delete_at: Date!
}

type Bullet {
  id: ID!
  content: String!
  point: Float
  create_at: Date!
  author: User!
  media: Medium!
}

type UserEdge {
  cursor: String!
  node: User!
}

type UserPaginated {
  edges: [UserEdge!]
  nodes: [User!]
  totalCount: Int!
  hasNextPage: Boolean!
}

type Character {
  name: String!
  avatar: String
  description: String
}

type MovieMedium {
  id: ID!
  name: String!
  alias_name: String!
  posters: [String!]
  description: String
  duration: Float
  preview_url: String
  url: String!
  low_quality_url: String
  medium_quality_url: String
  high_quality_url: String
  super_quality_url: String
  create_at: Date!
  update_at: Date!
  delete_at: Date!
  version: Float!
}

type Movie {
  id: ID!
  title: String!
  sub_title: String
  alias_title: String
  cover: String!
  posters: [String!]!
  description: String
  region: Region!
  actors: [Character!]
  directors: [Character!]
  sources: [MovieMedium!]!
  author: User!
  create_at: Date!
  update_at: Date!
  delete_at: Date!
}

enum Region {
  Mainland
  America
  Hongkong
  Taiwan
  Britain
  India
}

type MovieEdge {
  cursor: String!
  node: Movie!
}

type MoviePaginated {
  edges: [MovieEdge!]
  nodes: [Movie!]
  totalCount: Int!
  hasNextPage: Boolean!
}

type Topic {
  id: ID!
  title: String!
  description: String
  top_movie: Movie
  top_movies: [Movie!]
  create_at: Date!
  update_at: Date!
  delete_at: Date!
}

type Query {
  me: User!

  """find user by uid."""
  user(uid: String!): User!

  """all user with paginated."""
  users_paginated(after: String, first: Int): UserPaginated!
  movie(id: ID!): Movie!
  movies_paginated(after: String, first: Int): MoviePaginated!
  movie_urges: [Movie!]!
}

type Mutation {
  create_tag(tag: CreateTagInput!): Tag!
  create_category(category: CreateCategoryInput!): Category!
  delete_category(id: ID!): Boolean!
  create_bullet(bullet: CreateBulletInput!): Bullet!
  login(password: String!, username: String!): String!

  """create user."""
  create_user(user: CreateUserInput!): User!

  """create user with verif code."""
  create_user_with_code(user: CreateUserWithCodeInput!): User!
  send_register_email(email: String!): Boolean!
  update_user(user: UpdateUserInput!): String!
  upload_file_oss(file: Upload!): String!
  create_movie(movie: CreateMovieInput!): Movie!
  create_topic(topic: CreateTopicInput!): Topic!
}

input CreateTagInput {
  label: String!
  description: String
}

input CreateCategoryInput {
  label: String!
  alias: String
  description: String
  parent_id: Float
  children: [CreateCategoryInput!]
}

input CreateBulletInput {
  content: String!
  point: Float
  medium_id: Int!
}

input CreateUserInput {
  username: String!
  password: String!
  email: String!
  nickname: String
  avatar: String
  mobile: String
  address: String
  description: String
}

input CreateUserWithCodeInput {
  username: String!
  password: String!
  email: String!
  nickname: String
  avatar: String
  mobile: String
  address: String
  description: String
  code: String!
}

input UpdateUserInput {
  nickname: String
  avatar: String
  mobile: String
  address: String
  description: String
  password: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateMovieInput {
  title: String!
  sub_title: String
  alias_title: String
  cover: String!
  posters: [String!]!
  description: String
  region: String
  actors: [CreateCharacterInput!]
  directors: [CreateCharacterInput!]
  source_ids: [ID!]!
  sources: [CreateMovieMediumInput!]!
}

input CreateCharacterInput {
  name: String!
  avatar: String
  description: String
}

input CreateMovieMediumInput {
  name: String!
  url: String!
  alias_name: String
  posters: [String!]
  description: String
  movie_id: ID
}

input CreateTopicInput {
  title: String!
  description: String
  top_movie_id: ID
  top_movies_ids: [ID!]
}

type Subscription {
  user_created: User!
}
